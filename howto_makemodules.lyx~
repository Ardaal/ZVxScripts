#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
ZScripts Module Programming
\end_layout

\begin_layout Paragraph
All modules are loaded from single files, for example, ban_command.js would
 be a single module.
 Modules import from other modules as required.
\end_layout

\begin_layout Part
Module Properties
\end_layout

\begin_layout Paragraph
These are the properties that your module should have present in order to
 integrate correctly.
\end_layout

\begin_layout Section*
require
\end_layout

\begin_layout Paragraph
An array of module names to import.
 Required modules are imported as a property of the module.
 For example, importing the 
\begin_inset Quotes eld
\end_inset

com
\begin_inset Quotes erd
\end_inset

 module will make the functions of the com module available at this.com.,
 for example: this.com.broadcast(
\begin_inset Quotes eld
\end_inset

A message!
\begin_inset Quotes erd
\end_inset

);
\end_layout

\begin_layout Section*
loadModule
\end_layout

\begin_layout Paragraph
Called when your module is loaded.
\end_layout

\begin_layout Section*
unloadModule
\end_layout

\begin_layout Paragraph
Called when your module is unloaded.
\end_layout

\begin_layout Part
Module methods
\end_layout

\begin_layout Section*
onUnloadModule(callback)
\end_layout

\begin_layout Paragraph
Calls the function when the module is unloaded.
\end_layout

\begin_layout Part
Script API
\end_layout

\begin_layout Section*
loadModule(modname)
\end_layout

\begin_layout Paragraph
The script's loadModule property loads a module.
 Generally you should avoid calling it manually, instead using the provided
 main.json file.
 If the module is already loaded, this function does nothing.
\end_layout

\begin_layout Section*
unloadModule(modname)
\end_layout

\begin_layout Paragraph
Unloads the module.
 If the module is already unloaded, this module does nothing.
\end_layout

\begin_layout Section*
reloadModule(modname)
\end_layout

\begin_layout Paragraph
Unloads the module if it is present, then loads it.
\end_layout

\begin_layout Section*
registerHandler(handlername, object, propname=handlername)
\end_layout

\begin_layout Paragraph
Registers a handler of the name handlername from object.
 It uses the object[propname] property, unless propname is omitted.
 If propname is omitted, handername is used for propname.
\end_layout

\begin_layout Paragraph
For example, script.registerHandler(
\begin_inset Quotes eld
\end_inset

beforeChatMessage
\begin_inset Quotes erd
\end_inset

, this);
\end_layout

\end_body
\end_document
